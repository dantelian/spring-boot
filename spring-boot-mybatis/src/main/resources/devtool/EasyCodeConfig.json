{
  "author" : "makejava",
  "version" : "1.2.8",
  "userSecure" : "",
  "currTypeMapperGroupName" : "Default",
  "currTemplateGroupName" : "easycode-mybatis-plus",
  "currColumnConfigGroupName" : "Default",
  "currGlobalConfigGroupName" : "Default",
  "typeMapper" : { },
  "template" : {
    "crcm-cloud-mybatis-plus" : {
      "name" : "crcm-cloud-mybatis-plus",
      "elementList" : [ {
        "name" : "controller.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Controller\")\n\n##保存文件（宏定义）\n#save(\"/controller\", \"Controller.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"controller\")\n\n##定义服务名\n#set($serviceName = $!tool.append($!tool.firstLowerCase($!tableInfo.name), \"Service\"))\n\n##定义实体对象名\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\nimport com.crcm.cloud.starter.data.mybatis.model.PageT;\nimport com.crcm.cloud.starter.data.base.BaseController;\nimport com.crcm.cloud.starter.core.support.response.RestResult;\nimport $!{tableInfo.savePackageName}.persistence.entity.$!{tableInfo.name}Entity;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.web.bind.annotation.*;\nimport lombok.RequiredArgsConstructor;\nimport io.swagger.v3.oas.annotations.Operation;\nimport io.swagger.v3.oas.annotations.Parameters;\nimport io.swagger.v3.oas.annotations.Parameter;\nimport io.swagger.v3.oas.annotations.tags.Tag;\n\nimport java.io.Serializable;\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表控制层\")\n@RestController\n@RequestMapping(\"/$!tool.firstLowerCase($!tableInfo.name)\")\n@Tag(name = \"$!{tableInfo.comment}\", description = \"$!{tableInfo.comment}接口\")\n@RequiredArgsConstructor\npublic class $!{tableName} extends BaseController {\n    /**\n     * 服务对象\n     */\n    private final $!{tableInfo.name}Service $!{serviceName};\n\n\n    /**\n     * 新增数据\n     *\n     * @param $!entityName 实体对象\n     * @return 新增结果\n     */\n    @Operation(summary = \"新建数据\", description = \"\", tags = \"$!{tableName} API\")\n    @PostMapping(\"/create\")\n    public RestResult<$!{tableInfo.name}Entity> create(@RequestBody $!{tableInfo.name}Entity $!entityName) {\n        return success(this.$!{serviceName}.save$!{tableInfo.name}($!entityName));\n    }\n\n    /**\n     * 修改数据\n     *\n     * @param $!entityName 实体对象\n     * @return 修改结果\n     */\n    @Operation(summary = \"根据{$!pk.name}修改数据\", description = \"\", tags = \"$!{tableName} API\")\n    @PostMapping(\"/update\")\n    public RestResult<Boolean> update(@RequestBody $!{tableInfo.name}Entity $!entityName) {\n        return success(this.$!{serviceName}.update$!{tableInfo.name}($!entityName));\n    }\n\n    /**\n     * 删除数据\n     *\n     * @param id 主键\n     * @return 删除结果\n     */\n    @Operation(summary = \"根据{$!pk.name}删除数据\", description = \"\", tags = \"$!{tableName} API\")\n    @PostMapping(\"/delete/{$!pk.name}\")\n    public RestResult<Boolean> delete(@PathVariable $!pk.shortType $!pk.name) {\n        return success(this.$!{serviceName}.delete$!{tableInfo.name}($!pk.name));\n    }\n    \n    \n    /**\n     * 按条件分页查询\n     *\n     * @param page 分页对象\n     * @param $!entityName 查询实体\n     * @return 分页结果\n     */\n    @Operation(summary = \"按条件分页查询\", description = \"\", tags = \"$!{tableName} API\")\n    @GetMapping(\"/page\")\n    public RestResult<PageT<$!{tableInfo.name}Entity>> getPage(PageT<$!{tableInfo.name}Entity> page, $!{tableInfo.name}Entity $!entityName) {\n        return success(this.$!{serviceName}.findPage(page, $!entityName));\n    }\n\n    /**\n     * 通过主键查询单条数据\n     *\n     * @param id 主键\n     * @return 单条数据\n     */\n    @Operation(summary = \"根据${$!pk.name}获取数据\", description = \"\", tags = \"$!{tableName} API\")\n    @GetMapping(\"/detail/{id}\")\n    public RestResult<$!{tableInfo.name}Entity> getOne(@PathVariable $!pk.shortType $!pk.name) {\n        return success(this.$!{serviceName}.findOne($!pk.name));\n    }\n    \n    /**\n     * 按条件查询所有数据\n     * @param $!entityName\n     * @return\n     */\n    @Operation(summary = \"按条件查询所有数据\", description = \"\", tags = \"$!{tableName} API\")\n    @GetMapping(\"/all\")\n    public RestResult<List<$!{tableInfo.name}Entity>> getAll($!{tableInfo.name}Entity $!entityName) {\n        return success(this.$!{serviceName}.findList($!entityName));\n    }\n}\n"
      }, {
        "name" : "dao.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Mapper\")\n\n##保存文件（宏定义）\n#save(\"/persistence/dao\", \"Mapper.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"persistence.dao\")\n\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\nimport $!{tableInfo.savePackageName}.persistence.entity.$!{tableInfo.name}Entity;\n\n##表注释（宏定义）\n#tableComment(\"表数据库访问层\")\npublic interface $!{tableName} extends BaseMapper<$!{tableInfo.name}Entity> {\n\n}\n"
      }, {
        "name" : "entity.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/persistence/entity\", \"Entity.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"persistence.entity\")\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n## 设置公共属性\n#set($publicColumn = [\"create_time\",\"create_by\",\"update_time\",\"update_time\",\"tenant_id\"])\n##自动导入包（全局变量）\n$!{autoImport.vm}\nimport com.crcm.cloud.starter.data.base.BaseTenantEntity;\nimport com.baomidou.mybatisplus.annotation.*;\nimport com.baomidou.mybatisplus.extension.activerecord.Model;\nimport lombok.EqualsAndHashCode;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport jakarta.persistence.Column;\nimport jakarta.persistence.Entity;\nimport jakarta.persistence.Id;\nimport jakarta.persistence.Table;\nimport lombok.Data;\nimport org.hibernate.annotations.ColumnDefault;\nimport org.hibernate.annotations.Comment;\n\nimport java.io.Serial;\nimport java.io.Serializable;\n\n##表注释（宏定义）\n#tableComment(\"表实体类\")\n@Data\n@Entity\n@Table(name = \"$!{tableInfo.obj.name}\")\n@TableName(\"$!{tableInfo.obj.name}\")\n@EqualsAndHashCode(callSuper = true)\n@Schema(name = \"$!{tableInfo.name}\", description = \"$!{tableInfo.comment}\")\npublic class $!{tableInfo.name}Entity extends BaseTenantEntity {\n    @Serial\n    private static final long serialVersionUID = $!tool.serial();\n#foreach($column in $tableInfo.fullColumn)\n    #if(!$publicColumn.contains($column.obj.name))\n    /**\n     * $!{column.comment}\n     */\n    @Schema(description = \"$!{column.comment}\")\n    #if(${column.name} == $!{pk.name})\n    @Id\n    @TableId(value = \"$!{pk.obj.name}\", type = IdType.ASSIGN_ID)\n    #end\n    #if(${column.name} == \"createTime\" || ${column.name} == \"createBy\" )\n    @TableField(fill = FieldFill.INSERT)\n    #end\n    #if(${column.name} == \"updateTime\" || ${column.name} == \"updateBy\" )\n    @TableField(fill = FieldFill.UPDATE)\n    #end\n    #if(${column.name} == \"deleted\" )\n    @TableLogic\n    @TableField(fill = FieldFill.INSERT)\n    #end\n    #if($column.comment && $column.comment != '' )\n    @Comment(\"${column.comment}\")\n    #end\n    #if($column.obj.nullable)\n    @Column(nullable = $!{column.obj.nullable}, columnDefinition = \"$!{column.obj.dataType}\")\n    #else\n    @Column(columnDefinition = \"$!{column.obj.dataType}\")\n    #end\n    #if($column.obj.defaultValue)\n    @ColumnDefault(\"${column.obj.defaultValue}\")\n    #end\n    private $!{tool.getClsNameByFullName($column.type)} $!{column.name};\n    #end\n#end\n\n##foreach($column in $tableInfo.fullColumn)\n##getSetMethod($column)\n##end\n\n}\n"
      }, {
        "name" : "service.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"Service\")\n\n##保存文件（宏定义）\n#save(\"/service\", \"Service.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service\")\n##定义实体对象名\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport com.crcm.cloud.starter.data.mybatis.model.PageT;\nimport $!{tableInfo.savePackageName}.persistence.entity.$!{tableInfo.name}Entity;\n\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表服务接口\")\npublic interface $!{tableName} extends IService<$!{tableInfo.name}Entity> {\n   \n    /**\n     * 新增 $!{tableInfo.comment}\n     *\n     * @param $!entityName 实体对象\n     * @return 新增结果\n     */\n    $!{tableInfo.name}Entity save$!{tableInfo.name}($!{tableInfo.name}Entity $!entityName);\n    \n    /**\n     * 修改 $!{tableInfo.comment}\n     *\n     * @param $!entityName 实体对象\n     * @return 修改结果\n     */\n    boolean update$!{tableInfo.name}($!{tableInfo.name}Entity $!entityName);\n    \n    /**\n     * 删除 $!{tableInfo.comment}\n     *\n     * @param id $!{tableInfo.comment} id\n     * @return 新增结果\n     */\n    boolean delete$!{tableInfo.name}($!pk.shortType $!pk.name);\n   \n    /**\n     *  根据主键查询单个$!{tableInfo.comment}\n     *\n     * @param id $!{tableInfo.comment} id\n     * @return 新增结果\n     */\n    public $!{tableInfo.name}Entity findOne($!pk.shortType $!pk.name);\n    \n    /**\n     * 分页查询 $!{tableInfo.comment}\n     *\n     * @param page 分页对象\n     * @param $!entityName 查询对象\n     * @return 分页结果\n     */\n    PageT<$!{tableInfo.name}Entity> findPage(PageT<$!{tableInfo.name}Entity> page, $!{tableInfo.name}Entity $!entityName);\n    \n    /**\n     * 查询所有 $!{tableInfo.comment}\n     *\n     * @param $!entityName 查询对象\n     * @return 集合\n     */\n    List<$!{tableInfo.name}Entity> findList($!{tableInfo.name}Entity $!entityName);\n\n}\n"
      }, {
        "name" : "serviceImpl.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##设置表后缀（宏定义）\n#setTableSuffix(\"ServiceImpl\")\n\n##保存文件（宏定义）\n#save(\"/service/impl\", \"ServiceImpl.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"service.impl\")\n##定义实体对象名\n#set($entityName = $!tool.firstLowerCase($!tableInfo.name))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.core.toolkit.Wrappers;\nimport $!{tableInfo.savePackageName}.persistence.dao.$!{tableInfo.name}Mapper;\nimport $!{tableInfo.savePackageName}.persistence.entity.$!{tableInfo.name}Entity;\nimport $!{tableInfo.savePackageName}.service.$!{tableInfo.name}Service;\nimport org.springframework.stereotype.Service;\nimport com.crcm.cloud.starter.data.mybatis.model.PageT;\nimport org.springframework.transaction.annotation.Transactional;\n\nimport java.util.List;\n\n##表注释（宏定义）\n#tableComment(\"表服务实现类\")\n@Transactional\n@Service(\"$!tool.firstLowerCase($tableInfo.name)Service\")\npublic class $!{tableName} extends ServiceImpl<$!{tableInfo.name}Mapper, $!{tableInfo.name}Entity> implements $!{tableInfo.name}Service {\n    \n    /**\n     * 新增数据\n     *\n     * @param $!entityName 实体对象\n     */\n    @Override\n    public $!{tableInfo.name}Entity save$!{tableInfo.name}($!{tableInfo.name}Entity $!entityName) {\n        this.save($!entityName);\n        return $!entityName;\n    }\n    \n     /**\n     * 修改数据\n     *\n     * @param $!entityName 实体对象\n     */\n    @Override\n    public boolean update$!{tableInfo.name}($!{tableInfo.name}Entity $!entityName) {\n        return this.updateById($!entityName);\n    }\n    \n    /**\n     * 通过主键删除\n     *\n     * @param $!pk.name 主键\n     */\n    @Override\n    public boolean delete$!{tableInfo.name}($!pk.shortType $!pk.name) {\n        return this.removeById($!pk.name);\n    }\n    \n     /**\n     * 通过主键查询单条数据\n     *\n     * @param $!pk.name 主键\n     * @return 实例对象\n     */\n    @Override\n    public $!{tableInfo.name}Entity findOne($!pk.shortType $!pk.name) {\n        return this.getById($!pk.name);\n    }\n    \n    /**\n     * 多条件分页查询\n     *\n     * @param $!entityName 带条件的实例\n     * @return $!{tableInfo.name}分页集合\n     */\n    @Override\n    public PageT<$!{tableInfo.name}Entity> findPage(PageT<$!{tableInfo.name}Entity> page, $!{tableInfo.name}Entity $!entityName) {\n        return this.page(page, Wrappers.lambdaQuery($!entityName));\n    }\n    \n    /**\n     * 多条件查询\n     *\n     * @param $!entityName 带条件的实例\n     * @return $!{tableInfo.name}集合\n     */\n    @Override\n    public List<$!{tableInfo.name}Entity> findList($!{tableInfo.name}Entity $!entityName) {\n        return this.list(Wrappers.lambdaQuery($!entityName));\n    }\n}\n"
      }, {
        "name" : "mapper.xml.vm",
        "code" : "##引入mybatis支持\n$!mybatisSupport\n\n##设置保存名称与保存位置\n$!callback.setFileName($tool.append($!{tableInfo.name}, \"Mapper.xml\"))\n$!callback.setSavePath($tool.append($modulePath, \"/src/main/resources/mapper\"))\n\n##拿到主键\n#if(!$tableInfo.pkColumn.isEmpty())\n    #set($pk = $tableInfo.pkColumn.get(0))\n#end\n\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"$!{tableInfo.savePackageName}.persistence.dao.$!{tableInfo.name}Mapper\">\n\n    <resultMap type=\"$!{tableInfo.savePackageName}.persistence.entity.$!{tableInfo.name}Entity\" id=\"$!{tableInfo.name}Map\">\n#foreach($column in $tableInfo.fullColumn)\n        <result property=\"$!column.name\" column=\"$!column.obj.name\" />\n#end\n    </resultMap>\n\n</mapper>"
      }, {
        "name" : "dto.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/persistence/entity/dto\", \"Dto.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"persistence.entity.dto\")\n##自动导入包（全局变量）\n$!{autoImport.vm}\n\nimport $!{tableInfo.savePackageName}.persistence.entity.$!{tableInfo.name}Entity;\nimport lombok.EqualsAndHashCode;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\nimport java.io.Serial;\n\n##表注释（宏定义）\n#tableComment(\"Dto 数据传输对象\")\n@Data\n@EqualsAndHashCode(callSuper = true)\n@Schema(name = \"$!{tableInfo.name}Dto\", description = \"$!{tableInfo.comment} 数据传输对象\")\npublic class $!{tableInfo.name}Dto extends $!{tableInfo.name}Entity {\n    @Serial\n    private static final long serialVersionUID = $!tool.serial();\n\n##foreach($column in $tableInfo.fullColumn)\n##getSetMethod($column)\n##end\n\n}\n"
      }, {
        "name" : "vo.java.vm",
        "code" : "##导入宏定义\n$!{define.vm}\n\n##保存文件（宏定义）\n#save(\"/persistence/entity/vo\", \"Vo.java\")\n\n##包路径（宏定义）\n#setPackageSuffix(\"persistence.entity.vo\")\n##自动导入包（全局变量）\n$!{autoImport.vm}\nimport $!{tableInfo.savePackageName}.persistence.entity.$!{tableInfo.name}Entity;\nimport lombok.EqualsAndHashCode;\nimport io.swagger.v3.oas.annotations.media.Schema;\nimport lombok.Data;\n\nimport java.io.Serial;\n\n##表注释（宏定义）\n#tableComment(\"Vo\")\n@Data\n@EqualsAndHashCode(callSuper = true)\n@Schema(name = \"$!{tableInfo.name}Vo\", description = \"$!{tableInfo.comment} 视图对象\")\npublic class $!{tableInfo.name}Vo extends $!{tableInfo.name}Entity {\n    @Serial\n    private static final long serialVersionUID = $!tool.serial();\n\n##foreach($column in $tableInfo.fullColumn)\n##getSetMethod($column)\n##end\n\n}\n"
      } ]
    }
  },
  "columnConfig" : { },
  "globalConfig" : { }
}